version: "3.8"
name: ${TASK_NAME}

services:
  mainapp:
    build:
      context: ./src/app
      dockerfile: app.Dockerfile
      args:
        FLAG: ${FLAG}
    restart: unless-stopped
    volumes:
      - ./src/app/static/:/app/static/
      - ./src/app/templates/:/app/templates/
    ports:
      - 3000:3000
    depends_on:
      - db

  nginx:
    restart: always
    image: nginx:1-bookworm
    volumes:
      - ./src/default.conf:/etc/nginx/conf.d/default.conf
      - ./src/app/static/:/www/media/static/
    ports:
      - 8181:8181
    depends_on:
      - mainapp

  bot:
    restart: always
    build:
      dockerfile: bot.Dockerfile
      context: ./src/bot
      args:
        FLAG: ${FLAG}
    ports:
      - "3030:3030"
    healthcheck:
      test: ["CMD-SHELL", "curl http://mainapp:8181/ || exit 1"]
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s

  db:
    image: postgres:14-alpine
    volumes:
      - ./src/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
