#define CS  9
#define MAX_DEVICES 4
#define FLAG_SIZE 18

LedControl lc = LedControl(DIN, CLK, CS, MAX_DEVICES);

byte flag[][8] = {
  {
    0b00000000,
    0b01000100,
    0b01101100,
    0b01010100,
    0b01000100,
    0b01000100,
    0b01000100,
    0b00000000
  },
  {
    0b00000000,
    0b00111000,
    0b01000100,
    0b01000000,
    0b01000000,
    0b01000100,
    0b00111000,
    0b00000000
  },
  {
    0b00000000,
    0b01111100,
    0b00010000,
    0b00010000,
    0b00010000,
    0b00010000,
    0b00010000,
    0b00000000,
  },
  {
    0b00000000,
    0b00111100,
    0b00100000,
    0b00111000,
    0b00100000,
    0b00100000,
    0b00100000,
    0b00000000,
  },
  {
    0b00011000,
    0b00010000,
    0b00010000,
    0b00100000,
    0b00010000,
    0b00010000,
    0b00011000,
    0b00000000
  },
  {
    0b00000000,
    0b00001000,
    0b00001000,
    0b00001000,
    0b00111000,
    0b00101000,
    0b00111000,
    0b00000000
  },
  {
    0b00000000,
    0b00101000,
    0b00101000,
    0b00111000,
    0b00001000,
    0b00001000,
    0b00001000,
    0b00000000
  },
  {
    0b00000000,
    0b01000100,
    0b01101100,
    0b01010100,
    0b01000100,
    0b01000100,
    0b01000100,
    0b00000000
  },
  {
    0b00000000,
    0b00100000,
    0b00111100,
    0b00100100,
    0b00100100,
    0b00100100,
    0b00100100,
    0b00000000
  },
  {
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b00000000,
    0b01111110,
    0b00000000
  },
  {
    0b00000000,
    0b00010000,
    0b00101000,
    0b01000100,
    0b01111100,
    0b01000100,
    0b01000100,
    0b00000000
  },
  {
    0b00000000,
    0b00101100,
    0b00110100,
    0b00100000,
    0b00100000,
    0b00100000,
    0b00100000,
    0b00000000,
  },
  {
    0b00000000,
    0b01110000,
    0b01001000,
    0b01000100,
    0b01000100,
    0b01001000,
    0b01110000,
    0b00000000
  },
  {
    0b00000000,
    0b01000100,
    0b01000100,
    0b01000100,
    0b01000100,
    0b01000100,
    0b00111000,
    0b00000000,
  },
  {
    0b00000000,
    0b00010000,
    0b00000000,
    0b00010000,
    0b00010000,
    0b00010000,
    0b00010000,
    0b00000000,
  },
  {
    0b00000000,
    0b01000010,
    0b01100010,
    0b01010010,
    0b01001010,
    0b01000110,
    0b01000010,
    0b00000000
  },
  {
    0b00111000,
    0b01000100,
    0b01000100,
    0b01000100,
    0b01000100,
    0b01000100,
    0b01000100,
    0b00111000
  },
  {
    0b00110000,
    0b00010000,
    0b00010000,
    0b00001000,
    0b00010000,
    0b00010000,
    0b00110000,
    0b00000000
  }
};

void printFlag();
void drawCharacter(char character[8], int matrixIndex);

void setup() {
  Serial.begin(115200);
  for (int i = 0; i < MAX_DEVICES; i++) {
    lc.shutdown(i, false); 
    lc.setIntensity(i, 15); 
    lc.clearDisplay(i); 
  }
}

void loop() {
  printFlag();
}

uint8_t reverseByte(uint8_t byte) {
    uint8_t reversed = 0;
    for (int i = 0; i < 8; i++) {
        reversed |= ((byte >> i) & 1) << (7 - i);
    }
    return reversed;
}

void printFlag() {
  for (int i = 0; i < FLAG_SIZE; i += 4) {
    int idx = 0;
    for (int j = MAX_DEVICES - 1; j >= 0; --j) {
      if (i + idx + 1 >= FLAG_SIZE) break;
      drawCharacter(flag[j + i], idx++);
    }
    delay(2000);
    for (int i = 0; i < MAX_DEVICES; i++) 
      lc.clearDisplay(i); 
  }
}

void drawCharacter(char character[8], int matrixIndex) {
  for (int row = 0; row < 8; row++) {
    lc.setRow(matrixIndex, row, reverseByte(character[row]));
  }
}

