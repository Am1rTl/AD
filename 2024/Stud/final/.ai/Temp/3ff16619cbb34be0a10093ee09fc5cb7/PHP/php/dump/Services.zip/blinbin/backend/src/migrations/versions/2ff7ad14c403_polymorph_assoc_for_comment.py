from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '2ff7ad14c403'
down_revision = 'f90dfd20d9c1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('comments', schema=None) as batch_op:

        target_type = postgresql.ENUM('user', 'post', 'comment', name='targettarget',create_type=False, nullable = False)
        target_type.create(op.get_bind())


        batch_op.add_column(sa.Column('target_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('target_type', sa.Enum('user', 'post', name='targettarget'), nullable=False))
        batch_op.drop_constraint('comments_post_id_fkey', type_='foreignkey')
        batch_op.drop_column('post_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('comments', schema=None) as batch_op:

        target_type = postgresql.ENUM('user', 'post', 'comment', name='targettarget',create_type=False, nullable = False)
        target_type.drop(op.get_bind())

        batch_op.add_column(sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('comments_post_id_fkey', 'posts', ['post_id'], ['id'])
        batch_op.drop_column('target_type')
        batch_op.drop_column('target_id')

    # ### end Alembic commands ###
